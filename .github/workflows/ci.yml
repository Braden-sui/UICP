# CI workflow enforces lint, tests, security scans, and build gates.
name: CI

on:
  push:
    branches:
      - main
      - feature/**
  pull_request:

permissions:
  contents: read
  security-events: write

concurrency:
  group: ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    name: Web Suite
    runs-on: ubuntu-latest
    timeout-minutes: 35
    env:
      RUN_E2E: false
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Setup Node
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6
        with:
          node-version: 20
          cache: npm
          cache-dependency-path: uicp/package-lock.json

      - name: Create .env for tests
        working-directory: uicp
        run: |
          printf "E2E_ORCHESTRATOR=0\n" > .env
          printf "VITE_MOCK_MODE=true\n" >> .env
          printf "USE_DIRECT_CLOUD=0\n" >> .env
          printf "PLANNER_MODEL=deepseek-v3.1:671b\n" >> .env
          printf "ACTOR_MODEL=qwen3-coder:480b\n" >> .env

      - name: Install dependencies (no scripts)
        working-directory: uicp
        run: npm ci --ignore-scripts

      - name: Postinstall (whitelisted)
        working-directory: uicp
        run: npm run postinstall

      - name: Lint
        working-directory: uicp
        run: npm run lint

      - name: Typecheck
        working-directory: uicp
        run: npm run typecheck

      - name: Unit tests
        working-directory: uicp
        run: npm run test

      - name: Build
        working-directory: uicp
        run: npm run build

      - name: Link check (Markdown)
        uses: lycheeverse/lychee-action@v2
        with:
          args: >
            --method GET
            --no-progress
            --exclude "localhost|127\\.0\\.0\\.1|^https?://$"
            --accept 200,301,302,303,307,308
            .
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

      - name: Install Playwright browsers
        if: ${{ env.RUN_E2E == 'true' }}
        working-directory: uicp
        run: npx playwright install --with-deps

      - name: E2E tests
        if: ${{ env.RUN_E2E == 'true' }}
        working-directory: uicp
        run: npm run test:e2e

      - name: Generate SBOM (CycloneDX)
        uses: anchore/sbom-action@24b0d5238516480139aa8bc6f92eeb7b54a9eb0a
        with:
          path: .
          format: cyclonedx-json
          artifact-name: sbom-cyclonedx

      - name: Trivy scan (filesystem)
        uses: aquasecurity/trivy-action@b6643a29fecd7f34b3597bc6acb0a98b03d33ff8
        with:
          scan-type: fs
          scan-ref: .
          vuln-type: 'os,library'
          format: table
          exit-code: '1'
          severity: CRITICAL,HIGH
          ignore-unfixed: true

      - name: Secrets scan (gitleaks)
        uses: gitleaks/gitleaks-action@ff98106e4c7b2bc287b24eaf42907196329070c7
        with:
          args: detect --redact --no-git -v

      - name: Upload build artifacts
        if: success()
        uses: actions/upload-artifact@50769540e7f4bd5e21e526ee35c689e35e0d6874
        with:
          name: uicp-build
          path: |
            uicp/dist

  rust-tests:
    name: Rust Suite
    runs-on: ubuntu-latest
    timeout-minutes: 25
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
        with:
          toolchain: stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@7939da402645ba29a2df566723491a2c856e8f8a
        with:
          workspaces: |
            uicp/src-tauri

      - name: Run Rust tests (integration + harness)
        working-directory: uicp/src-tauri
        run: cargo test --all-targets --locked --verbose

  rust-compute-build:
    name: Rust Compute (wasm_compute)
    runs-on: ubuntu-latest
    timeout-minutes: 20
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install Rust toolchain
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
        with:
          toolchain: stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@7939da402645ba29a2df566723491a2c856e8f8a
        with:
          workspaces: |
            uicp/src-tauri

      - name: Cargo check with features (compute)
        working-directory: uicp/src-tauri
        run: |
          cargo check --no-default-features --features wasm_compute,uicp_wasi_enable --locked --verbose

      - name: Build (compute features)
        working-directory: uicp/src-tauri
        run: |
          cargo build --no-default-features --features wasm_compute,uicp_wasi_enable --locked --verbose
