name: compute-ci

on:
  pull_request:
  push:
    branches: [ main ]

jobs:
  build-and-test:
    runs-on: ubuntu-latest
    env:
      VITE_WIL_ONLY: '1'
      # WHY: Ensure Playwright smoke uses the signed module path exercised in prod.
      STRICT_MODULES_VERIFY: '1'
      UICP_MODULES_PUBKEY: ih4HBWNN6fqiMx8ee5NICPwDUzu/4ORtUjo7OTVu4wg=
    steps:
      - name: Checkout
        uses: actions/checkout@v4

      - name: Setup Node.js
        uses: actions/setup-node@v4
        with:
          node-version: 20

      - name: Setup Rust
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          profile: minimal
          override: true

      - name: Install wasm32-wasip1 target
        run: |
          rustup target add wasm32-wasip1

      - name: Install component tools
        run: |
          cargo install cargo-component --locked || true
          cargo install wit-component --locked || true

      - name: Rust check (compute host)
        working-directory: uicp/src-tauri
        run: |
          cargo check --features "wasm_compute uicp_wasi_enable"

      - name: Build compute harness binary
        working-directory: uicp/src-tauri
        run: |
          # WHY: Precompile the compute_harness binary so Playwright reuses the warmed artifact and we fail fast on feature drift.
          cargo build --features "wasm_compute,uicp_wasi_enable,compute_harness" -p uicp

      - name: Assert engine versions pinned
        run: |
          echo "Checking Wasmtime versions in lockfile"
          awk '/name = "wasmtime"/{f=1} f&&/version/{print; exit}' uicp/src-tauri/Cargo.lock | grep -E '37\.'
          awk '/name = "wasmtime-wasi"/{f=1} f&&/version/{print; exit}' uicp/src-tauri/Cargo.lock | grep -E '37\.'

      - name: Host harness smoke (strict verify)
        working-directory: uicp/src-tauri
        env:
          STRICT_MODULES_VERIFY: ${{ env.STRICT_MODULES_VERIFY }}
          UICP_MODULES_PUBKEY: ${{ env.UICP_MODULES_PUBKEY }}
        run: |
          mkdir -p ../target/compute-ci
          printf '%s\n' '{"jobId":"ci-smoke","task":"csv.parse@1.2.0","input":{"source":"data:text/csv,a,b\n1,2","hasHeader":true},"timeoutMs":10000,"fuel":null,"memLimitMb":null,"bind":[],"cache":"disabled","capabilities":{},"replayable":true,"workspaceId":"default","provenance":{"envHash":"ci-smoke","agentTraceId":null}}' \
            | cargo run --quiet --features "wasm_compute,uicp_wasi_enable,compute_harness" --bin compute_harness -- run --data-dir ../target/compute-ci

      - name: Rust tests compile (no run)
        working-directory: uicp/src-tauri
        run: |
          cargo test --features "wasm_compute uicp_wasi_enable" --no-run

      - name: Rust tests (compute host)
        working-directory: uicp/src-tauri
        run: |
          cargo test --features "wasm_compute uicp_wasi_enable" -- --nocapture

      - name: Node install
        working-directory: uicp
        run: |
          npm ci --no-optional --ignore-scripts

      - name: Regenerate WIT bindings
        working-directory: uicp
        run: |
          npm run -s gen:io
          git diff --exit-code src/compute/types.gen.ts

      - name: Unit tests (TS)
        working-directory: uicp
        run: |
          npm run -s test

      - name: Build web bundle
        working-directory: uicp
        run: |
          # WHY: Ensure the Vite build passes before spawning the preview server for Playwright.
          npm run -s build

      - name: Install Playwright browsers
        working-directory: uicp
        run: |
          npx playwright install chromium --with-deps

      - name: E2E compute harness smoke
        working-directory: uicp
        run: |
          # WHY: Run the headless compute harness smoke to exercise epoch/fuel/fs caps against the real host binary.
          npm run -s test:e2e -- --grep "compute harness"

      - name: Verify WIT packages
        run: |
          wit-component wit --check docs/wit
          wit-component wit --check uicp/components/csv.parse/csv-parse/wit
          wit-component wit --check uicp/components/table.query/wit

      - name: cargo-component metadata (csv.parse)
        working-directory: uicp/components/csv.parse/csv-parse
        run: |
          cargo component metadata

      - name: cargo-component metadata (table.query)
        working-directory: uicp/components/table.query
        run: |
          cargo component metadata

      - name: cargo-component metadata (log.test)
        working-directory: uicp/components/log.test
        run: |
          cargo component metadata
