name: compute-ci

on:
  pull_request:
    paths-ignore:
      - 'docs/**'
      - 'uicp/docs/**'
      - '**/*.md'
  push:
    branches: [ main ]
    paths-ignore:
      - 'docs/**'
      - 'uicp/docs/**'
      - '**/*.md'

concurrency:
  group: compute-ci-${{ github.ref }}
  cancel-in-progress: true

jobs:
  changes:
    name: Detect relevant changes
    runs-on: ubuntu-latest
    outputs:
      # yamllint disable-line rule:line-length
      compute: ${{ steps.filter.outputs.compute }}
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8
      - name: Paths filter
        id: filter
        uses: dorny/paths-filter@v3
        with:
          filters: |
            compute:
              - 'uicp/src-tauri/**'
              - 'uicp/components/**'
              - 'uicp/scripts/**'
              - 'uicp/tests/e2e/**'
              - 'docs/wit/**'
              - '.github/workflows/compute-ci.yml'

  build-and-test:
    needs: changes
    if: ${{ github.ref == 'refs/heads/main' || needs.changes.outputs.compute == 'true' }}
    runs-on: ubuntu-latest
    env:
      VITE_WIL_ONLY: '1'
      # WHY: Ensure Playwright smoke uses the signed module path exercised in prod.
      STRICT_MODULES_VERIFY: '1'
      UICP_MODULES_PUBKEY: ih4HBWNN6fqiMx8ee5NICPwDUzu/4ORtUjo7OTVu4wg=
    steps:
      - name: Checkout
        uses: actions/checkout@08c6903cd8c0fde910a37f88322edcfb5dd907a8

      - name: Install GTK dependencies
        run: |
          sudo apt-get update
          sudo apt-get install -y \
            libgtk-3-dev \
            libglib2.0-dev \
            libgirepository1.0-dev \
            libcairo2-dev \
            libpango1.0-dev \
            libwebkit2gtk-4.1-dev \
            libjavascriptcoregtk-4.1-dev \
            libsoup-3.0-dev

      - name: Setup pnpm
        uses: pnpm/action-setup@c5ba7f7862a0f64c1b1a05fbac13e0b8e86ba08c
        with:
          version: 9.0.0

      - name: Setup Node.js
        uses: actions/setup-node@0a44ba7841725637a19e28fa30b79a866c81b0a6
        with:
          node-version: 20
          cache: 'pnpm'
          cache-dependency-path: uicp/pnpm-lock.yaml

      - name: Setup Rust
        uses: dtolnay/rust-toolchain@5d458579430fc14a04a08a1e7d3694f545e91ce6
        with:
          toolchain: stable

      - name: Cache cargo
        uses: Swatinem/rust-cache@7939da402645ba29a2df566723491a2c856e8f8a
        with:
          workspaces: |
            uicp/src-tauri

      - name: Install wasm32-wasip1 target
        run: |
          rustup target add wasm32-wasip1

      - name: Install component tools
        run: |
          # WHY: Install wasm tooling if not already present. Fail loud if installation fails.
          # INVARIANT: These tools must be available for WIT validation and component checks.
          command -v cargo-component || cargo install cargo-component --locked
          command -v wit-component || cargo install wit-component --locked
          # Install WebAssembly Compositions (wac) CLI to validate component targets
          command -v wac || cargo install wac-cli --locked

      - name: Rust check (compute host)
        working-directory: uicp/src-tauri
        run: |
          cargo check --features "wasm_compute uicp_wasi_enable"

      - name: Build compute harness binary
        working-directory: uicp/src-tauri
        run: |
          # WHY: Precompile the compute_harness binary so Playwright reuses the warmed artifact and we fail fast on feature drift.
          cargo build --features "wasm_compute,uicp_wasi_enable,compute_harness" -p uicp

      - name: Assert engine versions pinned
        run: |
          echo "Checking Wasmtime versions in lockfile"
          awk '/name = "wasmtime"/{f=1} f&&/version/{print; exit}' uicp/src-tauri/Cargo.lock | grep -E '37\.'
          awk '/name = "wasmtime-wasi"/{f=1} f&&/version/{print; exit}' uicp/src-tauri/Cargo.lock | grep -E '37\.'

      - name: Host harness smoke (strict verify)
        working-directory: uicp/src-tauri
        env:
          STRICT_MODULES_VERIFY: ${{ env.STRICT_MODULES_VERIFY }}
          UICP_MODULES_PUBKEY: ${{ env.UICP_MODULES_PUBKEY }}
        run: |
          mkdir -p ../target/compute-ci
          printf '%s\n' '{"jobId":"ci-smoke","task":"csv.parse@1.2.0","input":{"source":"data:text/csv,a,b\n1,2","hasHeader":true},"timeoutMs":10000,"fuel":null,"memLimitMb":null,"bind":[],"cache":"disabled","capabilities":{},"replayable":true,"workspaceId":"default","provenance":{"envHash":"ci-smoke","agentTraceId":null}}' \
            | cargo run --quiet --features "wasm_compute,uicp_wasi_enable,compute_harness" --bin compute_harness -- run --data-dir ../target/compute-ci

      - name: Rust tests compile (no run)
        working-directory: uicp/src-tauri
        run: |
          cargo test --features "wasm_compute uicp_wasi_enable" --no-run

      - name: Rust tests (compute host)
        working-directory: uicp/src-tauri
        run: |
          cargo test --features "wasm_compute uicp_wasi_enable" -- --nocapture

      - name: Node install
        working-directory: uicp
        run: |
          pnpm install --no-optional --ignore-scripts

      - name: Regenerate WIT bindings
        working-directory: uicp
        run: |
          pnpm run -s gen:io
          git diff --exit-code src/compute/types.gen.ts

      - name: Unit tests (TS)
        working-directory: uicp
        run: |
          pnpm run -s test

      - name: Build web bundle
        working-directory: uicp
        run: |
          # WHY: Ensure the Vite build passes before spawning the preview server for Playwright.
          pnpm run -s build

      - name: Install Playwright browsers
        working-directory: uicp
        run: |
          pnpm exec playwright install chromium --with-deps

      - name: E2E compute harness smoke
        working-directory: uicp
        run: |
          # WHY: Run the headless compute harness smoke to exercise epoch/fuel/fs caps against the real host binary.
          pnpm run -s test:e2e -- --grep "compute harness"

      - name: Verify WIT packages
        run: |
          wit-component wit --check docs/wit
          wit-component wit --check uicp/components/csv.parse/csv-parse/wit
          wit-component wit --check uicp/components/table.query/wit

      - name: Validate modules implement expected worlds (wac targets)
        run: |
          # Ensure shipped components conform to their declared worlds
          wac targets uicp/src-tauri/modules/csv.parse@1.2.0.wasm uicp/components/csv.parse/csv-parse/wit/world.wit
          wac targets uicp/src-tauri/modules/table.query@0.1.0.wasm uicp/components/table.query/wit/world.wit

      - name: cargo-component metadata (csv.parse)
        working-directory: uicp/components/csv.parse/csv-parse
        run: |
          cargo component metadata

      - name: cargo-component metadata (table.query)
        working-directory: uicp/components/table.query
        run: |
          cargo component metadata

      - name: cargo-component metadata (log.test)
        working-directory: uicp/components/log.test
        run: |
          cargo component metadata
